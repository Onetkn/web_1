{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isDarkMode: false,\n  language: 'zh'\n};\nconst themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    toggleDarkMode: state => {\n      state.isDarkMode = !state.isDarkMode;\n    },\n    setLanguage: (state, action) => {\n      state.language = action.payload;\n    }\n  }\n});\nexport const {\n  toggleDarkMode,\n  setLanguage\n} = themeSlice.actions;\nexport default themeSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isDarkMode","language","themeSlice","name","reducers","toggleDarkMode","state","setLanguage","action","payload","actions","reducer"],"sources":["C:/Users/1/Desktop/my-sf-compare/src/store/themeSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface ThemeState {\r\n  isDarkMode: boolean;\r\n  language: 'zh' | 'en';\r\n}\r\n\r\nconst initialState: ThemeState = {\r\n  isDarkMode: false,\r\n  language: 'zh',\r\n};\r\n\r\nconst themeSlice = createSlice({\r\n  name: 'theme',\r\n  initialState,\r\n  reducers: {\r\n    toggleDarkMode: (state) => {\r\n      state.isDarkMode = !state.isDarkMode;\r\n    },\r\n    setLanguage: (state, action: PayloadAction<'zh' | 'en'>) => {\r\n      state.language = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleDarkMode, setLanguage } = themeSlice.actions;\r\nexport default themeSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAwB,GAAG;EAC/BC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,cAAc,EAAGC,KAAK,IAAK;MACzBA,KAAK,CAACN,UAAU,GAAG,CAACM,KAAK,CAACN,UAAU;IACtC,CAAC;IACDO,WAAW,EAAEA,CAACD,KAAK,EAAEE,MAAkC,KAAK;MAC1DF,KAAK,CAACL,QAAQ,GAAGO,MAAM,CAACC,OAAO;IACjC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,cAAc;EAAEE;AAAY,CAAC,GAAGL,UAAU,CAACQ,OAAO;AACjE,eAAeR,UAAU,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}