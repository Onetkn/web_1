{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={isDarkMode:false,language:'zh'};const themeSlice=createSlice({name:'theme',initialState,reducers:{toggleDarkMode:state=>{state.isDarkMode=!state.isDarkMode;},setLanguage:(state,action)=>{state.language=action.payload;}}});export const{toggleDarkMode,setLanguage}=themeSlice.actions;export default themeSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isDarkMode","language","themeSlice","name","reducers","toggleDarkMode","state","setLanguage","action","payload","actions","reducer"],"sources":["C:/Users/1/Desktop/my-sf-compare/src/store/themeSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface ThemeState {\r\n  isDarkMode: boolean;\r\n  language: 'zh' | 'en';\r\n}\r\n\r\nconst initialState: ThemeState = {\r\n  isDarkMode: false,\r\n  language: 'zh',\r\n};\r\n\r\nconst themeSlice = createSlice({\r\n  name: 'theme',\r\n  initialState,\r\n  reducers: {\r\n    toggleDarkMode: (state) => {\r\n      state.isDarkMode = !state.isDarkMode;\r\n    },\r\n    setLanguage: (state, action: PayloadAction<'zh' | 'en'>) => {\r\n      state.language = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleDarkMode, setLanguage } = themeSlice.actions;\r\nexport default themeSlice.reducer; "],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAO7D,KAAM,CAAAC,YAAwB,CAAG,CAC/BC,UAAU,CAAE,KAAK,CACjBC,QAAQ,CAAE,IACZ,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGJ,WAAW,CAAC,CAC7BK,IAAI,CAAE,OAAO,CACbJ,YAAY,CACZK,QAAQ,CAAE,CACRC,cAAc,CAAGC,KAAK,EAAK,CACzBA,KAAK,CAACN,UAAU,CAAG,CAACM,KAAK,CAACN,UAAU,CACtC,CAAC,CACDO,WAAW,CAAEA,CAACD,KAAK,CAAEE,MAAkC,GAAK,CAC1DF,KAAK,CAACL,QAAQ,CAAGO,MAAM,CAACC,OAAO,CACjC,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEJ,cAAc,CAAEE,WAAY,CAAC,CAAGL,UAAU,CAACQ,OAAO,CACjE,cAAe,CAAAR,UAAU,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}